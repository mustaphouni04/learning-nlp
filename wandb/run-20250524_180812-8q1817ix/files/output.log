[synthetic] Epoch 1/3:   0%|          | 0/133 [00:00<?, ?it/s]Passing a tuple of `past_key_values` is deprecated and will be removed in Transformers v4.48.0. You should pass an instance of `EncoderDecoderCache` instead, e.g. `past_key_values=EncoderDecoderCache.from_legacy_cache(past_key_values)`.
[synthetic] Epoch 1/3:   0%|          | 0/133 [00:01<?, ?it/s]
Traceback (most recent call last):
  File "/export/hhome/ainlp22/learning-nlp/asho_project.py", line 58, in <module>
    train_loop(train_loader, lr = 1e-3, epochs=num_epochs, name="synthetic")
  File "/export/hhome/ainlp22/learning-nlp/asho_project.py", line 50, in train_loop
    loss = wrapper(input_ids=input_ids, attention_mask=attention_mask, labels=labels)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/hhome/ainlp22/miniconda3/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/hhome/ainlp22/miniconda3/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/export/hhome/ainlp22/learning-nlp/_modules.py", line 19, in forward
    outputs = self.model(
              ^^^^^^^^^^^
  File "/hhome/ainlp22/miniconda3/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/hhome/ainlp22/miniconda3/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/hhome/ainlp22/miniconda3/lib/python3.12/site-packages/transformers/models/t5/modeling_t5.py", line 1941, in forward
    loss = loss_fct(lm_logits.view(-1, lm_logits.size(-1)), labels.view(-1))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/hhome/ainlp22/miniconda3/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/hhome/ainlp22/miniconda3/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/hhome/ainlp22/miniconda3/lib/python3.12/site-packages/torch/nn/modules/loss.py", line 1295, in forward
    return F.cross_entropy(
           ^^^^^^^^^^^^^^^^
  File "/hhome/ainlp22/miniconda3/lib/python3.12/site-packages/torch/nn/functional.py", line 3494, in cross_entropy
    return torch._C._nn.cross_entropy_loss(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 7.63 GiB. GPU 0 has a total capacity of 44.35 GiB of which 865.44 MiB is free. Including non-PyTorch memory, this process has 43.49 GiB memory in use. Of the allocated memory 42.69 GiB is allocated by PyTorch, and 509.00 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
